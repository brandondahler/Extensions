<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<# var depth = 36; #>

namespace Microsoft.Extensions.DependencyInjection.Tests.Utils.LargeServiceGraph
{

    public static class ServiceCollectionExtensions
    {
        public static IServiceCollection AddLargeServiceGraph(this IServiceCollection serviceCollection, ServiceLifetime serviceLifetime)
        {
<# for (int x = 1; x <= depth; x++) { #>
            serviceCollection.Add(ServiceDescriptor.Describe(typeof(LS<#= x #>), typeof(LS<#= x #>), serviceLifetime));
<# } #>
            return serviceCollection;
        }
    }

<# for (int x = 1; x <= depth; x++) { #>
<# var parameters = string.Join(", ", Enumerable.Range(x + 1, depth - x).Select(y => string.Format("LS{0} ls{0}", y))); #>
    public class LS<#= x #>
    {
        public LS<#= x #>(<#= parameters #>)
        {
            
        }
    }

<# } #>
}
